openapi: 3.0.2
info:
    title: Malle-Andre-pank
    version: 1.0.0
servers:
    -
        url: 'http://localhost:1234'
        description: ''
paths:
    /users:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postUsersRequest'
                required: true
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userObject'
                    description: User successfully registred.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid password:
                                    value:
                                        error: Invalid password
                                Parameter is required:
                                    value:
                                        error: User validation failed
                    description: Bad request.
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Username already exists:
                                    value:
                                        error: Username already exists
                    description: Username already exists.
            summary: Registers a new user
    /sessions:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postSessionsRequest'
                required: true
            tags:
                - sessions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/postSessionsResponse'
                    description: User logged in succesfully
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Missing username or password:
                                    value:
                                        error: Missing username or password
                    description: Missing username or password
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid username or password:
                                    value:
                                        error: Invalid username or password
                    description: Invalid username or password
            summary: Logs the user in
        delete:
            tags:
                - sessions
            responses:
                '204':
                    description: User logged out successfully
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Missing Authorization header:
                                    value:
                                        error: Missing Authorization header
                                Invalid token:
                                    value:
                                        error: Invalid token
                    description: Unauthorized
            summary: Logs the user out
    /users/current:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/getUsersCurrentResponse'
                    description: Successful request
            security:
                -
                    Token: []
            summary: Returns currently logged in user's data
    /transactions:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postTransactionsRequest'
                required: true
            tags:
                - transactions
            responses:
                '201':
                    content:
                        application/json: {}
                    description: Transactions has been successfully queued for transaction.
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                invalidAmount:
                                    value:
                                        error: Invalid amount
                                invalidAccountTo:
                                    value:
                                        error: Invalid accountTo
                    description: Invalid amount
                '402':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                paymentRequired:
                                    value:
                                        error: Payment required
                    description: Insufficient funds
                '403':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                forbidden:
                                    value:
                                        error: Forbidden
                    description: AccountFrom does not belong to the user
                '404':
                    content:
                        application/json: {}
                    description: Account not found
            security:
                -
                    Token: []
components:
    schemas:
        postUsersRequest:
            title: POST /users request
            description: ''
            required:
                - name
                - username
                - password
            type: object
            properties:
                name:
                    description: User's full name.
                    type: string
                username:
                    description: Chosen username.
                    type: string
                password:
                    format: password
                    description: User's password.
                    type: string
            example:
                name: Juku
                username: Uku
                password: wordpass
        userObject:
            title: user object
            description: ''
            type: object
            properties:
                id:
                    description: User's ID.
                    type: string
                name:
                    description: User's full name.
                    type: string
                username:
                    description: Chosen username'
                    type: string
                accounts:
                    description: Array of user's bank accounts.
                    type: array
                    items:
                        $ref: '#/components/schemas/account'
            example:
                id: 5f7b7ad24abdf90a746edaac
                name: Juku
                username: Uku
                accounts:
                    -
                        name: Main
                        balance: 100000
                        currency: EUR
                        number: abc84dbea2a7b4b39fac9cbb2d6469ebfab
                        id: 5f7b7ad34abdf90a746edaad
        errorResponse:
            title: error object
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        postSessionsRequest:
            title: POST /sessions request
            description: ''
            type: object
            properties:
                username:
                    description: A valid username
                    type: string
                password:
                    description: A valid password
                    type: string
            example:
                username: Uku
                password: wordpass
        postSessionsResponse:
            title: POST /sessions response
            description: ''
            type: object
            properties:
                token:
                    description: A session token which needs to be send back with every request to the server
                    type: string
            example:
                token: 5f8022d6f40ea213f83577fc
        getUsersCurrentResponse:
            title: GET /users/current response
            description: ''
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                username:
                    type: string
                accounts:
                    description: Array of user's accounts
                    type: array
                    items:
                        $ref: '#/components/schemas/account'
            example:
                id: 5f8015346fea363d746f935b
                name: Juku
                username: Uku
                accounts:
                    -
                        name: Main
                        balance: 100000
                        currency: EUR
                        number: 8430d3949b73af69489183f5e5d2760537c
        account:
            title: account object
            description: ''
            type: object
            properties:
                name:
                    type: string
                balance:
                    type: integer
                currency:
                    type: string
                number:
                    type: string
            example:
                name: Main
                balance: 100000
                currency: EUR
                number: 8430d3949b73af69489183f5e5d2760537c
        postTransactionsRequest:
            title: POST /transactions request
            description: ''
            type: object
            properties:
                accountFrom:
                    description: Sender's bank account
                    type: string
                accountTo:
                    description: Reciever's bank account
                    type: string
                amount:
                    format: int32
                    description: Transfered sum
                    type: integer
                explanation:
                    description: Purpose of the transaction
                    type: string
            example:
                accountFrom: abc3b770e63e9f1c2efc2b83c187653d2cc
                accountTo: BY000000001
                amount: 2
                explanation: Don’t go spend it all at once
    securitySchemes:
        Token:
            scheme: bearer
            type: http
security:
    -
        Token: []